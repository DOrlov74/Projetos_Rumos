@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    ViewBag.CurrentUser = currentUser;
}

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                @*<a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>*@
                <a class="nav-link text-dark menu__cart" asp-controller="Orders" asp-action="CustomerOrders" asp-route-id="@ViewBag.CurrentUser.Id"></a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark menu__user" asp-controller="Customer" asp-action="Edit" asp-route-Id="@ViewBag.CurrentUser.Id"></a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-controller="Customer" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Customer" asp-action="Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Customer" asp-action="Login">Login</a>
            </li>
        }
    </ul>
