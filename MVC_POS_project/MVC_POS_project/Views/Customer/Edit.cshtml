@using Microsoft.AspNetCore.Identity
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> UserManager
@model MVC_POS_project.ViewModels.EditCustomerViewModel

@{
    ViewData["Title"] = "Edit Customer";
    var currentUser = await UserManager.GetUserAsync(User);
    ViewBag.CurrentUser = currentUser;
}
@if (ViewBag.CurrentUser != null && await UserManager.IsInRoleAsync(ViewBag.CurrentUser, "admin"))
{
    <h4>Edit Customer</h4>
}
else
{
    <h4>Edit Personal Information</h4>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="Id" value="@Model.Id" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NIF" class="control-label"></label>
                <input asp-for="NIF" class="form-control" />
                <span asp-validation-for="NIF" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (ViewBag.CurrentUser != null && await UserManager.IsInRoleAsync(ViewBag.CurrentUser, "admin"))
    {
        <a asp-action="Index">Back to Customers List</a>
    }
    else
    {
        <a asp-controller="Products" asp-action="Index">Back to Products List</a>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
